/*
 * WordsAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.rapidapi.p.wordsapiv1.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ExamplesResponse type.
 */
public class ExamplesResponse {
    private String word;
    private List<String> examples;

    /**
     * Default constructor.
     */
    public ExamplesResponse() {
    }

    /**
     * Initialization constructor.
     * @param  word  String value for word.
     * @param  examples  List of String value for examples.
     */
    public ExamplesResponse(
            String word,
            List<String> examples) {
        this.word = word;
        this.examples = examples;
    }

    /**
     * Getter for Word.
     * The word that is searched.
     * @return Returns the String
     */
    @JsonGetter("word")
    public String getWord() {
        return word;
    }

    /**
     * Setter for Word.
     * The word that is searched.
     * @param word Value for String
     */
    @JsonSetter("word")
    public void setWord(String word) {
        this.word = word;
    }

    /**
     * Getter for Examples.
     * The usage examples of the searched word.
     * @return Returns the List of String
     */
    @JsonGetter("examples")
    public List<String> getExamples() {
        return examples;
    }

    /**
     * Setter for Examples.
     * The usage examples of the searched word.
     * @param examples Value for List of String
     */
    @JsonSetter("examples")
    public void setExamples(List<String> examples) {
        this.examples = examples;
    }

    /**
     * Converts this ExamplesResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ExamplesResponse [" + "word=" + word + ", examples=" + examples + "]";
    }

    /**
     * Builds a new {@link ExamplesResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ExamplesResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(word, examples);
        return builder;
    }

    /**
     * Class to build instances of {@link ExamplesResponse}.
     */
    public static class Builder {
        private String word;
        private List<String> examples;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  word  String value for word.
         * @param  examples  List of String value for examples.
         */
        public Builder(String word, List<String> examples) {
            this.word = word;
            this.examples = examples;
        }

        /**
         * Setter for word.
         * @param  word  String value for word.
         * @return Builder
         */
        public Builder word(String word) {
            this.word = word;
            return this;
        }

        /**
         * Setter for examples.
         * @param  examples  List of String value for examples.
         * @return Builder
         */
        public Builder examples(List<String> examples) {
            this.examples = examples;
            return this;
        }

        /**
         * Builds a new {@link ExamplesResponse} object using the set fields.
         * @return {@link ExamplesResponse}
         */
        public ExamplesResponse build() {
            return new ExamplesResponse(word, examples);
        }
    }
}
